<?php

defined('BASEPATH') OR exit('No direct script access allowed');

// This can be removed if you use __autoload() in config.php OR use Modular Extensions
/** @noinspection PhpIncludeInspection */
require APPPATH . '/libraries/REST_Controller.php';

// use namespace
use Restserver\Libraries\REST_Controller;

/**
 * This is an example of a few basic user interaction methods you could use
 * all done with a hardcoded array
 *
 * @package         CodeIgniter
 * @subpackage      Rest Server
 * @category        Controller
 * @author          Phil Sturgeon, Chris Kacerguis
 * @license         MIT
 * @link            https://github.com/chriskacerguis/codeigniter-restserver
 */
class Tenant extends REST_Controller {

    function __construct()
    {
        // Construct the parent class
        parent::__construct();
    
         $this->load->database();
        // Configure limits on our controller methods
        // Ensure you have created the 'limits' table and enabled 'limits' within application/config/rest.php
        $this->methods['list_get']['limit'] = 500; // 500 requests per hour per user/key
        $this->methods['users_post']['limit'] = 100; // 100 requests per hour per user/key
        $this->methods['users_delete']['limit'] = 50; // 50 requests per hour per user/key
    }

    public function list_get()
    {
       $id = $this->get('id');
        if ($id == '') {
            $tenant = $this->db->get('tbl_tenant')->result();
        } else {
            $this->db->where('id', $id);
            $tenant = $this->db->get('tbl_tenant')->result();
        }
        // $this->response($kontak, 200);
        $this->response($tenant, REST_Controller::HTTP_OK); 
        
    }
    
    public function category_post()
    {
        
      $app_Key =  $this->post('app_key');
      if ($app_Key === "T0JNMjAyMVJZQURKVUxJQU5P") {
           $category = $this->db->get('tbl_category_tenant')->result();
        //   $message = array();
           
           foreach ($category as $data) {
                    
                    
                    $tot = [];
                    $tnt = [];
                    $totalTenantByGroup =  $this->db
                    ->select('count(*) as TotalTenantByGroup')
                    ->from('tbl_tenant')
                    ->join('tbl_category_tenant','tbl_tenant.category_id=tbl_category_tenant.uid','LEFT')
                    ->where('tbl_tenant.category_id',$data->uid)
                    ->group_by('tbl_tenant.category_id')
                    ->get()->result(); //Getting the results ready...
                    
                    $ListTenant =  $this->db
                    ->select('*')
                    ->from('tbl_tenant')
                    ->where('tbl_tenant.category_id',$data->uid)
                    ->get()->result(); //Getting the results ready...
                    
                    
                     
                     
                     foreach ($totalTenantByGroup as $item) {
                         $tot = $item->TotalTenantByGroup;
                     }
                     
                    //  foreach ($ListTenant as $tenant) {
                    //      $tnt = $tenant;
                    //  }
            
                     $message[] = array(
                        "CategoryTenant" => $data,
                        "Tenant" => $ListTenant,
                        "TotalTenant" => $tot,
                     );     
                     
           }
        
           
         $this->response($message, REST_Controller::HTTP_OK); 
           
           
        //   $totalTenantByGroup =  $this->db
        //     ->select('count(*) as TotalTenantByGroup')
        //     ->from('tbl_tenant')
        //     ->join('tbl_category_tenant','tbl_tenant.category_id=tbl_category_tenant.uid','LEFT')
        //     ->group_by('tbl_tenant.category_id')
        //     ->get(); //Getting the results ready...
    
        //   $message = [
        //         'category' =>$category,
        //         'totalTenantBy' => $totalTenantByGroup->result(),
        //         'message' => 'Succesfully Get Data',
        //     ];
            
        //     $this->response($message, REST_Controller::HTTP_OK); 
            
          
              
      } else {
            $this->set_response([
                    'status' => FALSE,
                    'message' => 'Data could not be found'
                ], REST_Controller::HTTP_NOT_FOUND); // NOT_FOUND (404) being the HTTP response code
      
      }
        
    }

    public function create_post()
    {
        // $this->some_model->update_user( ... );
        $message = [
            'id' => 100, // Automatically generated by the model
            'name' => $this->post('name'),
            'email' => $this->post('email'),
            'message' => 'Added a resource'
        ];

        $this->set_response($message, REST_Controller::HTTP_CREATED); // CREATED (201) being the HTTP response code
    }

  

}
